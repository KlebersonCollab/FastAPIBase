name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Instalar uv
        run: pip install uv
      - name: Instalar dependências
        run: uv pip install --system .
      - name: Rodar Black
        run: uv run black --check .
      - name: Rodar Ruff
        run: uv run ruff check .

  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Instalar uv
        run: pip install uv
      - name: Instalar dependências
        run: uv pip install --system .
      - name: Instalar pytest-cov
        run: uv pip install --system pytest-cov
      - name: Criar .env.test
        run: |
          echo "SECRET_KEY=test-secret-key" > .env.test
          echo "DATABASE_URL=sqlite://db_test.sqlite3" >> .env.test
          echo "REDIS_URL=redis://localhost:6379/1" >> .env.test
          echo "API_KEYS=[\"test-api-key\"]" >> .env.test
      - name: Rodar testes com cobertura
        env:
          ENV: test
          PYTHONPATH: .
          TESTING: 1
        run: uv run pytest --cov=core --cov=fast_admin.py --cov-report=xml
      - name: Upload cobertura para Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Instalar uv
        run: pip install uv
      - name: Build Docker image
        run: docker build -t fastapibase:ci .
#  deploy:
#    needs: docker-build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Login no Docker Hub
#        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin
#      - name: Push Docker image
#        run: docker push fastapibase:ci 
  docs-deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Instalar uv e mkdocs
        run: |
          pip install uv
          uv pip install --system .
      - name: Buildar documentação MkDocs
        run: uv run mkdocs build
      - name: Deploy no GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site 