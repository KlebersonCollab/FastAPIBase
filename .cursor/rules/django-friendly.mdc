---
alwaysApply: true
---
üìú Rule: FastAPI como Django ‚Äî Automa√ß√£o e Produtividade
1. Estrutura e Organiza√ß√£o
Siga a estrutura modular inspirada no Django:
core/: Configura√ß√µes globais, settings, inicializa√ß√£o do app.
api/: Routers (controllers/views).
services/: L√≥gica de neg√≥cio (use cases).
repositories/: Abstra√ß√£o de dados (ORM, queries).
schemas/: DTOs e valida√ß√£o (Pydantic).
models/: Modelos ORM (SQLAlchemy).
Cada app/feature pode ser um subpacote, como apps Django.
2. Automa√ß√£o de CRUD e Admin
Implemente um gerador de CRUD autom√°tico (como o Django Admin):
Use reflection dos modelos para criar endpoints CRUD e valida√ß√£o automaticamente.
Gere rotas, schemas e permiss√µes a partir dos modelos.
Crie um painel administrativo web (pode usar FastAPI Admin, Tortoise-Admin ou customiza√ß√£o).
3. Migra√ß√µes e ORM
Use SQLAlchemy 2.0 (async) como ORM padr√£o.
Utilize Alembic para migra√ß√µes autom√°ticas, integrando comandos de migra√ß√£o ao CLI do projeto.
Gere modelos e migra√ß√µes a partir de schemas (Contract-First).
4. CLI de Gerenciamento
Crie um CLI (ex: manage.py ou cli.py) para:
Rodar servidor, criar apps, rodar migra√ß√µes, criar superusu√°rio, popular dados, etc.
Comandos devem ser autom√°ticos e interativos, como no Django.
5. Autentica√ß√£o, Permiss√µes e Usu√°rios
Implemente autentica√ß√£o JWT e OAuth2.
Gere modelos de usu√°rio, permiss√µes e grupos automaticamente.
Forne√ßa endpoints para login, registro, recupera√ß√£o de senha, etc.
6. Configura√ß√£o e Settings
Use Pydantic para settings, com carregamento autom√°tico de .env por ambiente.
Separe settings por ambiente (dev, prod, test).
7. Testes e Fixtures
Estruture testes por app/feature.
Use pytest, pytest-asyncio e factory_boy/model_bakery para fixtures.
Gere testes b√°sicos automaticamente ao criar novos modelos/endpoints.
8. Documenta√ß√£o e OpenAPI
Documenta√ß√£o autom√°tica via OpenAPI/Swagger.
Gere exemplos e descri√ß√µes a partir dos schemas e docstrings.
9. Seguran√ßa e Boas Pr√°ticas
Implemente CORS, rate limiting, CSRF, prote√ß√£o de headers e valida√ß√£o de entrada.
Gere middlewares de seguran√ßa automaticamente.
10. Extensibilidade e Plugins
Permita a cria√ß√£o de plugins/apps reutiliz√°veis, como no Django.
Facilite a integra√ß√£o de apps de terceiros (ex: autentica√ß√£o social, admin, etc).
Exemplo de Automa√ß√£o Esperada
uv run cli.py startapp blog ‚Üí Cria estrutura de app, modelos, rotas, testes, admin.
uv run cli.py makemigrations ‚Üí Detecta mudan√ßas nos modelos e gera migra√ß√µes.
uv run cli.py createsuperuser ‚Üí Cria usu√°rio admin via prompt.
CRUD, permiss√µes e admin web prontos para cada modelo criado.
